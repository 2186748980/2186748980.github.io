<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用Hexo+Github Pages搭建博客教程</title>
    <link href="/2024/08/15/%E5%A6%82%E4%BD%95%E8%87%AA%E5%B7%B1%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/08/15/%E5%A6%82%E4%BD%95%E8%87%AA%E5%B7%B1%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p><strong>这篇文章会给大家分享如何从0开始搭建个人独立博客</strong></p><p><strong>接下来开始</strong></p><h2 id="1-环境与工具准备"><a href="#1-环境与工具准备" class="headerlink" title="1.环境与工具准备"></a>1.环境与工具准备</h2><p><strong>教程面向的是Windows用户</strong></p><p>操作系统：Windows11</p><p><a href="https://www.sublimetext.com/download">Sublime Text</a>文本编辑</p><p>GitHub账号</p><p>Node.js</p><p>Git</p><h3 id="2-Github注册与创建仓库"><a href="#2-Github注册与创建仓库" class="headerlink" title="2.Github注册与创建仓库"></a>2.Github<a href="https://github.com/">注册</a>与创建仓库</h3><p>进入官网，点击右上角Sign up进行注册</p><p>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成</p><p>注册完成后，点击右上角+按钮，选择New repository</p><p>创建一个名称为<strong>用户名.github.io</strong>的仓库</p><p>必须为**&lt;用户名&gt;.github.io** (注意：前缀必须为用户名，不然会404报错）</p><p>勾选 Initialize this repository with a README 初始化一个 <a href="http://readme.md/">README.md</a> 文件</p><p>点击 Creat repository 进行创建</p><h3 id="3-Node-js的安装"><a href="#3-Node-js的安装" class="headerlink" title="3.Node.js的安装"></a>3.Node.js的安装</h3><p>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题 <a href="https://nodejs.org/en/download/">下载地址</a></p><p>安装完成后打开 cmd，输入</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br></code></pre></td></tr></table></figure><p>如果出现版本号代表安装成功</p><p>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像</p><p>打开cmd窗口，运行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h3 id="4-安装Git"><a href="#4-安装Git" class="headerlink" title="4.安装Git"></a>4.安装Git</h3><p>进入<a href="https://git-scm.com/downloads">官网</a></p><p>由于官网下载太慢可以通过淘宝的开源镜像下载 <a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">网址</a></p><p>下载后无脑下一步即可，安装目录可以默认，可以自选</p><p>在桌面右键，出现Open Git Bash here即代表安装成功</p><h3 id="5-安装Hexo"><a href="#5-安装Hexo" class="headerlink" title="5.安装Hexo"></a>5.安装Hexo</h3><p>打开 hexo 官网复制下面的命令</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>输入<code>hexo -v</code>验证是否安装成功，出现版本号即代表成功。</p><p>安装Hexo会出现的一些问题</p><h3 id="6-环境配置"><a href="#6-环境配置" class="headerlink" title="6.环境配置"></a>6.环境配置</h3><p>配置用户名和邮箱</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;你的用户名&quot;</span> <br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;你的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>通过 <code>git config -l</code>检查是否配置成功，现在git安装及配置全部完成</p><h3 id="7-连接至Github"><a href="#7-连接至Github" class="headerlink" title="7.连接至Github"></a>7.连接至Github</h3><p><strong>1.执行以下命令生成ssh公钥，它用于你的计算机连接Github</strong></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;你的邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>然后敲4次回车（Enter）⌨️</p><p>输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>可快捷查看密钥</p><p>复制从ssh开始的全部字段，或生成之后打开C盘用户文件夹下的.ssh文件夹，有一个名为<strong>id_rsa.pub</strong>的文件，用编辑器打开，复制里面所有内容，然后开始在github中配置ssh密钥</p><p><em>生成密钥过程中，如果C盘路径下存在中文，可能会导致密钥生成失败，可使用windows的powershell，或去通过超级管理员更改C盘下中文文件名</em></p><p><strong>2.将 SSH KEY 配置到 GitHub</strong></p><p>进入github，点击右上角头像 选择<code>Settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥粘贴填到<code>Key</code>一栏</p><p><strong>测试是否成功</strong></p><p>在git bash中输入</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p>回车，然后再输入yes</p><p>出现连接到账户的信息</p><p><code>You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></p><p>说明已经大功告成，至此完成了环境准备工作。</p><p>如果出现<code>ssh: connect to host github.com port 22: Connection refused</code></p><p>可以查看教程更改端口 <a href="https://blog.csdn.net/kuilaurence/article/details/135909974">教程1</a> <a href="https://blog.csdn.net/weixin_41287260/article/details/124368189">教程2</a> 可以解决SSH连接超时等问题</p><p>开源项目<a href="https://github.com/521xueweihan/GitHub520">Github520</a></p><p>通过修改Host文件的方法解决访问速度慢的问题</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 任选其一即可</span><br><span class="hljs-built_in">ping</span> github.com<br>ssh -T git<span class="hljs-symbol">@github</span>.com<br></code></pre></td></tr></table></figure><p>检查是否有加速器 有可以退掉</p><h3 id="8-初始化-Hexo-项目"><a href="#8-初始化-Hexo-项目" class="headerlink" title="8.初始化 Hexo 项目"></a>8.初始化 Hexo 项目</h3><p>在喜欢位置新建文件Blog，然后进入文件夹右键空白处然后点Git bash here，输入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p>如果<code>‘command not find’</code>，就在前面加上npx，如：<code>npx hexo init</code></p><p>然后输入</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">hexo <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><h4 id="8-1主题安装"><a href="#8-1主题安装" class="headerlink" title="8.1主题安装"></a>8.1主题安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> git@github.com:blinkfox/hexo-theme-matery.git themes/matery <span class="hljs-comment"># 找到主题的项目地址，把主题拉到本地的themes文件夹下</span><br></code></pre></td></tr></table></figure><h4 id="8-1-1切换主题"><a href="#8-1-1切换主题" class="headerlink" title="8.1.1切换主题"></a>8.1.1切换主题</h4><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="8-2主题目录的文件结构"><a href="#8-2主题目录的文件结构" class="headerlink" title="8.2主题目录的文件结构"></a>8.2主题目录的文件结构</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">themes<br>└── matery<br>    ├── LICENSE<br>    ├── README.md<br>    ├── README_CN.md<br>    ├── _config.yml <span class="hljs-comment"># 主题的配置文件</span><br>    ├── languages <span class="hljs-comment"># 默认是英文显示，若要其他语言显示，则需要在此添加对应语言的翻译规则，需要修改语言时，修改 /_config.yml 中的 “language:” 这一项</span><br>    ├── layout <span class="hljs-comment"># 页面js文件</span><br>    └── <span class="hljs-built_in">source</span> <span class="hljs-comment"># 图片等资源存放目录，这个目录对应为生成的静态网站的root路径</span><br></code></pre></td></tr></table></figure><p>在主题文件的根目录下，也是有一份 <code>_config.yml</code> 文件，博客根目录下的 <code>_config.yml</code> 是全局配置，优先级较高，主题的配置文件是全局配置的补充。</p><h4 id="8-3主题项配置"><a href="#8-3主题项配置" class="headerlink" title="8.3主题项配置"></a>8.3主题项配置</h4><p>菜单栏中已有默认的页面有 <code>Index</code>, <code>Tags</code>, <code>Categories</code>, <code>Archives</code>, <code>About</code>, <code>Contact</code>, <code>Friends</code>，但这些页面都是还没有被初始化的，需要手动初始化，当然你也可以自定义自己的页面</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;categories&quot;</span><br>hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;tags&quot;</span><br>hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;about&quot;</span><br>hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;contact&quot;</span><br>hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;friends&quot;</span><br>hexo <span class="hljs-keyword">new</span> page <span class="hljs-number">404</span><br></code></pre></td></tr></table></figure><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">具体见</a></p><p>如果主题配置满意，接下来依次输入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span><br>hexo s<br></code></pre></td></tr></table></figure><p><strong>不成功的话就重复直到成功，国内与github的连接不稳定</strong></p><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，如果成功打开，说明你的博客已经构建成功了</p><h2 id="9-将静态博客挂载到-GitHub-Pages"><a href="#9-将静态博客挂载到-GitHub-Pages" class="headerlink" title="9. 将静态博客挂载到 GitHub Pages"></a>9. 将静态博客挂载到 GitHub Pages</h2><p><strong>安装 hexo-deployer-git</strong>（自动部署发布工具）</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p><strong>修改 _config.yml 文件</strong><br>在blog目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将<code>repository</code>修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进，要有空格）</p><p>地址获取：去github之前生成的仓库页面，点code，复制SSh链接</p><p>将其粘贴到<code>repository：</code>后面然后保存退出</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repository:</span> git@github.com:Fomalhaut-Blog/Fomalhaut-Blog.github.io.git<br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><p>修改好配置后，在Blog文件夹右键打开git bash，运行如下命令，将代码部署到 GitHub</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo clean &amp;&amp; hexo <span class="hljs-keyword">generate</span> &amp;&amp; hexo deploy  <span class="hljs-comment">// Git BASH终端</span><br>hexo clean; hexo <span class="hljs-keyword">generate</span>; hexo deploy  <span class="hljs-comment">// VSCODE终端</span><br></code></pre></td></tr></table></figure><ul><li><p>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</p></li><li><p>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</p></li><li><p>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</p></li><li><p>如果出现<code>Deploy done</code>，则说明部署成功了。</p><p>稍等两分钟，打开浏览器访问：<a href="https://fomalhaut-blog.github.io/">https:&#x2F;&#x2F;用户名.github.io</a> ，这时候我们就可以看到博客内容了。</p></li></ul><blockquote><p>教程来自</p><p><a href="https://www.fomal.cc/posts/e593433d.html#2-%E7%8E%AF%E5%A2%83%E4%B8%8E%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87">Hexo博客搭建基础教程(一) | Fomalhaut🥝</a></p><p><a href="https://www.xrh.asia/posts/1fb7.html">Hexo+github+飞书，手把手从0搭建博客 | 北冥有鱼 (xrh.asia)</a></p></blockquote><h2 id="网站资料"><a href="#网站资料" class="headerlink" title="网站资料"></a>网站资料</h2><p>blog文件夹中的_config.yml #Site下面按自己的需求填上</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta">## Site</span><br><span class="hljs-symbol">title:</span> 标题<br><span class="hljs-symbol">subtitle:</span> 副标题<br><span class="hljs-symbol">description:</span> 描述<br><span class="hljs-symbol">keywords:</span> 关键词<br><span class="hljs-symbol">author:</span> 站主<br><span class="hljs-symbol">language:</span> 语言（可以填写<span class="hljs-built_in">zh</span>-CN）<br><span class="hljs-symbol">timezone:</span> 时区（可以填写Asia/Shanghai）<br></code></pre></td></tr></table></figure><h2 id="如何上传文章"><a href="#如何上传文章" class="headerlink" title="如何上传文章"></a>如何上传文章</h2><p>我们在Blog文件夹中打开git bash,输入下方代码就可以生成新的文章md文件</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> 文章标题<br></code></pre></td></tr></table></figure><p>文章是.md格式，在我们的Blog文件夹中的source&#x2F;_posts中</p><p>写好以后，我们还是一样打开git bash生成、上传 <code>hexo g  hexo d</code></p><p>至此，我们就成功搭建好基本的博客了，剩下的就是对博客的一些优化和美化了</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
